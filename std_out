<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< vector tests >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>



front() & back()
=======================================

vector Size: 5
vector [myvect2] contains:  [ 1 ]  [ 2 ]  [ 3 ]  [ 4 ]  [ 5 ]

vector Size: 2
vector [myvect] contains:  [ 77 ]  [ 22 ]
myvect.front() is now 55
=======================================

max_size()
=======================================
myvect.max_size() is: 2305843009213693951
=======================================

capacity()
=======================================
myvect.capacity() is: 4
myvect.size() is: 4
myvect.capacity() is: 8
myvect.size() is: 5
myvect.capacity() is: 55
myvect.size() is: 55
myvect.capacity() is: 110
myvect.size() is: 56
=======================================

assign()
=======================================

vector Size: 7
vector [first] contains:  [ 100 ]  [ 100 ]  [ 100 ]  [ 100 ]  [ 100 ]  [ 100 ]  [ 100 ]

vector Size: 7
vector [second] contains:  [ 100 ]  [ 100 ]  [ 100 ]  [ 100 ]  [ 100 ]  [ 100 ]  [ 100 ]

vector Size: 3
vector [first] contains:  [ 0 ]  [ 0 ]  [ 0 ]
Size of first: 3
Size of second: 7
=======================================

insert()
=======================================

vector Size: 8
vector [myvect] contains:  [ 1 ]  [ 10 ]  [ 20 ]  [ 20 ]  [ 2 ]  [ 3 ]  [ 4 ]  [ 5 ]

vector Size: 2
vector [mytmp] contains:  [ 30 ]  [ 30 ]

vector Size: 10
vector [myvect] contains:  [ 30 ]  [ 30 ]  [ 1 ]  [ 10 ]  [ 20 ]  [ 20 ]  [ 2 ]  [ 3 ]  [ 4 ]  [ 5 ]
=======================================

erase()
=======================================

vector Size: 9
vector [myvect] contains:  [ 10 ]  [ 20 ]  [ 30 ]  [ 40 ]  [ 50 ]  [ 60 ]  [ 70 ]  [ 80 ]  [ 90 ]

vector Size: 8
vector [myvect] contains:  [ 10 ]  [ 30 ]  [ 40 ]  [ 50 ]  [ 60 ]  [ 70 ]  [ 80 ]  [ 90 ]
*it1 = 30
*it1 = 70

vector Size: 7
vector [myvect] contains:  [ 10 ]  [ 30 ]  [ 40 ]  [ 50 ]  [ 60 ]  [ 80 ]  [ 90 ]
*it1 = 30
*it1 = 80
*it1 = 40
*it1 = 60

vector Size: 2
vector [myvect] contains:  [ 10 ]  [ 30 ]
=======================================

swap()
=======================================

vector Size: 3
vector [first] contains:  [ 100 ]  [ 100 ]  [ 100 ]

vector Size: 5
vector [second] contains:  [ 200 ]  [ 200 ]  [ 200 ]  [ 200 ]  [ 200 ]

vector Size: 5
vector [first] contains:  [ 200 ]  [ 200 ]  [ 200 ]  [ 200 ]  [ 200 ]

vector Size: 3
vector [second] contains:  [ 100 ]  [ 100 ]  [ 100 ]
=======================================

resize()
=======================================

vector Size: 9
vector [myvect] contains:  [ 1 ]  [ 2 ]  [ 3 ]  [ 4 ]  [ 5 ]  [ 6 ]  [ 7 ]  [ 8 ]  [ 9 ]

vector Size: 5
vector [myvect] contains:  [ 1 ]  [ 2 ]  [ 3 ]  [ 4 ]  [ 5 ]

vector Size: 8
vector [myvect] contains:  [ 1 ]  [ 2 ]  [ 3 ]  [ 4 ]  [ 5 ]  [ 100 ]  [ 100 ]  [ 100 ]

vector Size: 12
vector [myvect] contains:  [ 1 ]  [ 2 ]  [ 3 ]  [ 4 ]  [ 5 ]  [ 100 ]  [ 100 ]  [ 100 ]  [ 0 ]  [ 0 ]  [ 0 ]  [ 0 ]
=======================================

relational operators
=======================================

vector Size: 3
vector [a] contains:  [ 10 ]  [ 20 ]  [ 30 ]

vector Size: 3
vector [b] contains:  [ 10 ]  [ 20 ]  [ 30 ]

vector Size: 3
vector [c] contains:  [ 30 ]  [ 20 ]  [ 10 ]

a and b are equal
b and c are not equal
b is less than c
c is greater than b
a is less than or equal to b
a is greater than or equal to b
=======================================

non-member swap()
=======================================

vector Size: 3
vector [foo] contains:  [ 100 ]  [ 100 ]  [ 100 ]

vector Size: 5
vector [bar] contains:  [ 200 ]  [ 200 ]  [ 200 ]  [ 200 ]  [ 200 ]

vector Size: 5
vector [foo] contains:  [ 200 ]  [ 200 ]  [ 200 ]  [ 200 ]  [ 200 ]

vector Size: 3
vector [bar] contains:  [ 100 ]  [ 100 ]  [ 100 ]
=======================================

reverse iterators
=======================================
[2]  [100]  [100]  [100]  [100]  [1]  
=======================================

const iterators
=======================================
[1]  [2]  [3]  [4]  [5]  
=======================================

relational operators for iterator
=======================================
first=1
third=3
difference=2

=======================================

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< end of vector tests >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

